# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup VSTest Path
        uses: darenm/Setup-VSTest@v1.2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Restore NuGet packages
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}

      - name: Build
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

      - name: VSTest
        run: vstest.console.exe /Platform:x64 x64\\${{ env.BUILD_CONFIGURATION }}\\parser-tests.dll /ResultsDirectory:test-results /Logger:trx

      - uses: actions/upload-artifact@v4 # upload test results
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Test Results
          path: test-results/**
